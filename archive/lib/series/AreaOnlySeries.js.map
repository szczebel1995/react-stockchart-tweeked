{"version":3,"sources":["../../../src/lib/series/AreaOnlySeries.js"],"names":["AreaOnlySeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","yAccessor","defined","base","fill","stroke","opacity","xScale","yScale","chartConfig","plotData","xAccessor","newBase","fillStyle","strokeStyle","points0","points1","i","length","d","x","y1","y0","push","segment","className","areaSeries","newClassName","concat","propTypes","string","func","isRequired","number","oneOfType","defaultProps","isNaN","range","beginPath","x0","moveTo","x1","lineTo","closePath"],"mappings":"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","file":"AreaOnlySeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { area as d3Area } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { hexToRGBA, isDefined, first, functor } from \"../utils\";\n\nclass AreaOnlySeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { yAccessor, defined, base } = this.props;\n\t\tconst { fill, stroke, opacity } = this.props;\n\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\n\n\t\tconst newBase = functor(base);\n\n\t\tctx.fillStyle = hexToRGBA(fill, opacity);\n\t\tctx.strokeStyle = stroke;\n\n\t\tlet points0 = [], points1 = [];\n\n\t\tfor (let i = 0; i < plotData.length; i++) {\n\t\t\tconst d = plotData[i];\n\t\t\tif (defined(yAccessor(d), i)) {\n\t\t\t\tconst [x, y1, y0] = [xScale(xAccessor(d)), yScale(yAccessor(d)), newBase(yScale, d, moreProps)];\n\n\t\t\t\tpoints0.push([x, y0]);\n\t\t\t\tpoints1.push([x, y1]);\n\t\t\t} else if (points0.length) {\n\t\t\t\tsegment(points0, points1, ctx);\n\t\t\t\tpoints0 = [];\n\t\t\t\tpoints1 = [];\n\t\t\t}\n\t\t}\n\t\tif (points0.length) segment(points0, points1, ctx);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor, defined, base } = this.props;\n\t\tconst { stroke, fill, className, opacity } = this.props;\n\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\n\n\t\tconst newBase = functor(base);\n\t\tconst areaSeries = d3Area()\n\t\t\t.defined(d => defined(yAccessor(d)))\n\t\t\t.x((d) => xScale(xAccessor(d)))\n\t\t\t.y0((d) => newBase(yScale, d, moreProps))\n\t\t\t.y1((d) => yScale(yAccessor(d)));\n\n\t\tconst d = areaSeries(plotData);\n\t\tconst newClassName = className.concat(isDefined(stroke) ? \"\" : \" line-stroke\");\n\t\treturn (\n\t\t\t<path d={d} stroke={stroke} fill={fill} className={newClassName} opacity={opacity} />\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nAreaOnlySeries.propTypes = {\n\tclassName: PropTypes.string,\n\tyAccessor: PropTypes.func.isRequired,\n\tstroke: PropTypes.string,\n\tfill: PropTypes.string,\n\topacity: PropTypes.number,\n\tdefined: PropTypes.func,\n\tbase: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.number\n\t]),\n};\n\nAreaOnlySeries.defaultProps = {\n\tclassName: \"line \",\n\tfill: \"none\",\n\topacity: 1,\n\tdefined: d => !isNaN(d),\n\tbase: (yScale /* , d, moreProps */) => first(yScale.range()),\n};\n\n\nfunction segment(points0, points1, ctx) {\n\tctx.beginPath();\n\tconst [x0, y0] = first(points0);\n\tctx.moveTo(x0, y0);\n\n\tlet i;\n\tfor (i = 0; i < points1.length; i++) {\n\t\tconst [x1, y1] = points1[i];\n\t\tctx.lineTo(x1, y1);\n\t}\n\n\tfor (i = points0.length - 1; i >= 0; i--) {\n\t\tconst [x0, y0] = points0[i];\n\t\tctx.lineTo(x0, y0);\n\t}\n\tctx.closePath();\n\tctx.fill();\n}\n\nexport default AreaOnlySeries;\n"]}